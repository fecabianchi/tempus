//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use super::sea_orm_active_enums::ScheduleTypeEnum;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "job")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub time: DateTime,
    pub target: String,
    pub retries: i32,
    #[sea_orm(column_type = "JsonBinary")]
    pub payload: Json,
    pub r#type: ScheduleTypeEnum,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::job_metadata::Entity")]
    JobMetadata,
}

impl Related<super::job_metadata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JobMetadata.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
